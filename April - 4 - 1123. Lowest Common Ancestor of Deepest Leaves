/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Coup{
    TreeNode root;
    int val;
    Coup(TreeNode root,int val){
        this.root = root;
        this.val = val;
    }
}
class Solution {
    public TreeNode lcaDeepestLeaves(TreeNode root) {
        return dfs(root).root;
    }

    public Coup dfs(TreeNode root){
        if (root == null){
            return new Coup(null,0);
        }

        Coup left = dfs(root.left);
        Coup right = dfs(root.right);

        if (left.val == right.val){
            return new Coup(root,left.val + 1);
        }

        else if (left.val > right.val){
            return new Coup(left.root,left.val + 1);
        }

        return new Coup(right.root,right.val + 1);

    }
}
