class Solution {
    public boolean search(int[] arr,int n,int mid){
        int j = 0;
        int curr = arr[0];
        for (int i = 0; i < n; i++){
            if (curr <= mid){
                j++;
                if (j == arr.length){
                    return true;
                }
                else{
                    curr = arr[j];
                }
            }
            else{
               curr -= mid;
            }
        }

        return false;
    }
    public int minimizedMaximum(int n, int[] quantities) {
        int left = 0,right = 0;
        for (int i = 0; i < quantities.length; i++){
            if (right < quantities[i]){
                right = quantities[i];
            }
        }

        while (left < right){
            int mid = left + (right - left) / 2;
            if (search(quantities,n,mid)){
                right = mid;
            }
            else{
                left = mid + 1;
            }
        }
        return left;
    }
}
