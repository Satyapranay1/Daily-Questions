class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        int n = nums.length;
        int[] dp = new int[n];
        int[] prev = new int[n];
        Arrays.sort(nums);
        Arrays.fill(dp,1);
        Arrays.fill(prev,-1);

        int maxi = 0;
        for (int i = 1; i < n; i++){
            for (int j = 0; j < i; j++){
                if (nums[i] % nums[j] == 0 && dp[i] < 1 + dp[j]){
                    dp[i] = dp[j] + 1;
                    prev[i] = j;
                }
            }

            if (dp[i] > dp[maxi]){
                maxi = i;
            }
        }

        List<Integer> ans = new ArrayList<>();
        while (maxi != -1){
            ans.add(nums[maxi]);
            maxi = prev[maxi];
        }
        return ans;
    }
}
