/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    String small = "";
    public String smallestFromLeaf(TreeNode root) {
        dfs(root,"");
        return small;
    }

    public void dfs(TreeNode root,String curr){
        if (root == null){
            return;
        }

        curr = (char)(root.val + 'a') + curr;

        if (root.left == null && root.right == null){
            if (small.isEmpty() || curr.compareTo(small) < 0){
                small = curr;
            }
        } 

        dfs(root.left,curr);
        dfs(root.right,curr);
    }
}
